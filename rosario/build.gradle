plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'


	// Validation API
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.hibernate.validator:hibernate-validator:7.0.4.Final'  //  유효성 검사

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//Jackson이 Hibernate 프록시 객체를 처리
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.14.2'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2' // 추가 필요
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2' // 추가 필요 (Jackson Serializer)
}

tasks.named('test') {
	useJUnitPlatform()
}
